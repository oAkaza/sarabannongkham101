<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <title>üì§ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏™‡πà‡∏á</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Thai&display=swap" rel="stylesheet">
  <style>
    body { font-family: 'Noto Sans Thai', sans-serif; }
  </style>
</head>
<body class="bg-gradient-to-br from-pink-100 via-white to-pink-50 py-10">
  <div class="max-w-6xl mx-auto p-6 bg-white shadow-xl rounded-xl border border-pink-200">

<!-- ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ -->
    <h1 class="text-3xl font-bold text-center text-pink-800 mb-6">üì§ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏™‡πà‡∏á</h1>

    <!-- ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π -->
    <div class="flex justify-between items-center mb-6">
      <a href="/dashboard" class="px-4 py-2 bg-pink-600 hover:bg-pink-700 text-white rounded-lg shadow font-semibold">üè† ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å</a>
      <a href="/book-out" class="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg shadow font-semibold">‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏™‡πà‡∏á</a>
      <a href="/book-out/export" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg shadow font-semibold">üìÅ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î Excel</a>
    </div>
    
    <!-- ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ -->
    <div class="flex justify-start mb-4">
      <input type="text" id="searchInput" placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤..." class="w-full sm:w-1/3 px-4 py-2 border rounded shadow" onkeyup="filterTable()" />
    </div>

    <% if (data.length === 0) { %>
      <p class="text-center text-gray-500">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>
    <% } else { %>
      <div class="overflow-x-auto">
        <table class="table-auto w-full border text-sm text-center">
          <thead class="bg-pink-200 text-pink-900">
            <tr>
              <th class="p-2">‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡πà‡∏á</th>
              <th class="p-2">‡∏ä‡∏±‡πâ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß</th>
              <th class="p-2">‡∏ó‡∏µ‡πà</th>
              <th class="p-2">‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
              <th class="p-2">‡∏ñ‡∏∂‡∏á</th>
              <th class="p-2">‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á</th>
              <th class="p-2">‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥</th>
              <th class="p-2">‡πÑ‡∏ü‡∏•‡πå</th>
              <th class="p-2">‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</th>
            </tr>
          </thead>
          <tbody id="dataTable">
            <% data.forEach((item, i) => { %>
              <tr class="even:bg-pink-50">
                <td class="p-2"><%= item.registerNo %></td>
                <td class="p-2"><%= item.speed %></td>
                <td class="p-2"><%= item.docNo %></td>
                <td class="p-2"><%= item.docDate %></td>
                <td class="p-2"><%= item.to %></td>
                <td class="p-2 text-left max-w-[200px] truncate" title="<%= item.subject %>"><%= item.subject %></td>
                <td class="p-2"><%= item.action %></td>
                <td class="p-2">
                  <% if (item.pdfFile) { %>
                    <a href="/book-out/preview/<%= item.pdfFile %>" target="_blank" class="text-blue-600 hover:underline">‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå</a>
                  <% } else { %>-<% } %>
                </td>
                <td class="p-2 space-x-1">
  <a href="/book-out/edit/<%= i %>" 
     class="bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded shadow text-sm">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</a>
  <button type="button"
    class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded shadow text-sm btn-delete"
    data-index="<%= i %>"
    data-docno="<%= item.registerNo %>">‡∏•‡∏ö</button>
</td>

              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
      <div class="flex justify-center mt-4" id="paginationControls"></div>
    <% } %>
  </div>

  <!-- Pagination -->
  <script>
    const rowsPerPage = 20;
    let currentPage = 1;

    function paginateTable() {
      const rows = document.querySelectorAll('#dataTable tr');
      const totalPages = Math.ceil(rows.length / rowsPerPage);

      rows.forEach((row, index) => {
        row.style.display = (index >= (currentPage - 1) * rowsPerPage && index < currentPage * rowsPerPage) ? '' : 'none';
      });

      renderPaginationControls(totalPages);
    }

    function renderPaginationControls(totalPages) {
      const container = document.getElementById('paginationControls');
      container.innerHTML = '';

      const createBtn = (label, page) => {
        const btn = document.createElement('button');
        btn.innerText = label;
        btn.className = 'px-3 py-1 mx-1 rounded bg-pink-500 hover:bg-pink-600 text-white text-sm';
        btn.onclick = () => {
          currentPage = page;
          paginateTable();
        };
        return btn;
      };

      if (currentPage > 1) container.appendChild(createBtn('¬´ ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤', currentPage - 1));
      for (let i = 1; i <= totalPages; i++) {
        const btn = createBtn(i, i);
        if (i === currentPage) btn.classList.add('bg-pink-700');
        container.appendChild(btn);
      }
      if (currentPage < totalPages) container.appendChild(createBtn('‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ¬ª', currentPage + 1));
    }

    function filterTable() {
      const input = document.getElementById('searchInput').value.toLowerCase();
      const rows = document.querySelectorAll('#dataTable tr');
      rows.forEach(row => {
        const match = row.innerText.toLowerCase().includes(input);
        row.style.display = match ? '' : 'none';
      });

      const pagination = document.getElementById('paginationControls');
      pagination.style.display = input ? 'none' : 'flex';
    }

    window.addEventListener('DOMContentLoaded', paginateTable);
  </script>

  <!-- SweetAlert ‡∏•‡∏ö -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
  document.querySelectorAll('.btn-delete').forEach(btn => {
    btn.addEventListener('click', async () => {
      const index = btn.dataset.index;
      const docNo = btn.dataset.docno;

      const { value: password } = await Swal.fire({
        title: `‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (${docNo})`,
        input: 'password',
        inputLabel: '‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö',
        inputPlaceholder: '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô',
        showCancelButton: true,
        confirmButtonText: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡∏ö',
        cancelButtonText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'
      });

      if (!password) return;

      fetch(`/book-out/delete/${index}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ confirmPassword: password })
      })
        .then(res => {
          if (res.ok) {
            Swal.fire({
              icon: 'success',
              title: '‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!',
              text: `‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ${docNo} ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß`,
              timer: 2000,
              showConfirmButton: false
            }).then(() => location.reload());
          } else if (res.status === 403) {
            Swal.fire({
              icon: 'error',
              title: '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á',
              text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
              text: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ'
            });
          }
        });
    });
  });
</script>

</body>
</html>
