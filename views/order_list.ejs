<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <title>üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Thai&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>body { font-family: 'Noto Sans Thai', sans-serif; }</style>
</head>
<body class="bg-gradient-to-br from-yellow-100 via-white to-yellow-50 py-10">
  <div class="max-w-6xl mx-auto bg-white shadow-xl rounded-xl p-6 border border-yellow-200">
<h1 class="text-3xl font-bold text-center text-yellow-800 mb-6">üìí ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á</h1>

    <div class="flex justify-between items-center mb-6">
      <a href="/dashboard" class="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded shadow">üè† ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å</a>
      <a href="/order" class="px-4 py-2 bg-yellow-600 hover:bg-yellow-700 text-white rounded shadow">‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á</a>
      <a href="/order/export" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded shadow">üìÅ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î Excel</a>
    </div>

    <div class="flex justify-start mb-4">
      <input type="text" id="searchInput" placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤..." class="w-full sm:w-1/3 px-4 py-2 border rounded shadow" onkeyup="filterTable()" />
    </div>

    <% if (data.length === 0) { %>
      <p class="text-center text-gray-500">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>
    <% } else { %>
      <div class="overflow-x-auto">
        <table class="table-auto w-full border text-sm text-center">
          <thead class="bg-yellow-200 text-yellow-900 text-sm">
            <tr>
              <th class="p-2 w-36">‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á</th>
              <th class="p-2 w-36">‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á</th>
              <th class="p-2 w-28">‡∏™‡∏±‡πà‡∏á ‡∏ì ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
              <th class="p-2 w-36">‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥</th>
              <th class="p-2 w-20">‡πÑ‡∏ü‡∏•‡πå</th>
              <th class="p-2 w-24">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
            </tr>
          </thead>
          <tbody id="dataTable">
            <% data.forEach((item, i) => { %>
              <tr class="even:bg-yellow-50">
                <td class="p-2"><%= item.orderNo %></td>
                <td class="p-2 text-left"><%= item.subject || '-' %></td>
                <td class="p-2"><%= item.orderDate || '-' %></td>
                <td class="p-2"><%= item.department || '-' %></td>
                <td class="p-2">
                  <% if (item.pdfFile) { %>
  <a href="/uploads/<%= item.pdfFile %>" class="text-blue-600 hover:underline" target="_blank">‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå</a>
<% } else { %> - <% } %>

                </td>
                <td class="p-2">
  <div class="flex items-center justify-center gap-1">
    <a href="/order/edit/<%= i %>"
       class="px-2 py-1 bg-green-600 hover:bg-green-700 text-white rounded text-xs">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</a>
    <button type="button"
      class="px-2 py-1 bg-red-600 hover:bg-red-700 text-white rounded text-xs btn-delete"
      data-index="<%= i %>" data-docno="<%= item.orderNo %>">‡∏•‡∏ö</button>
  </div>
</td>

              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
      <div class="flex justify-center mt-4" id="paginationControls"></div>
    <% } %>
  </div>

  <!-- ‚úÖ Pagination & Search -->
  <script>
    const rowsPerPage = 20;
    let currentPage = 1;

    function paginateTable() {
      const rows = document.querySelectorAll('#dataTable tr');
      const totalPages = Math.ceil(rows.length / rowsPerPage);

      rows.forEach((row, index) => {
        row.style.display = (index >= (currentPage - 1) * rowsPerPage && index < currentPage * rowsPerPage) ? '' : 'none';
      });

      renderPaginationControls(totalPages);
    }

    function renderPaginationControls(totalPages) {
      const container = document.getElementById('paginationControls');
      container.innerHTML = '';

      const createBtn = (label, page) => {
        const btn = document.createElement('button');
        btn.innerText = label;
        btn.className = 'px-3 py-1 mx-1 rounded bg-yellow-500 hover:bg-yellow-600 text-white text-sm';
        btn.onclick = () => {
          currentPage = page;
          paginateTable();
        };
        return btn;
      };

      if (currentPage > 1) container.appendChild(createBtn('¬´ ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤', currentPage - 1));
      for (let i = 1; i <= totalPages; i++) {
        const btn = createBtn(i, i);
        if (i === currentPage) btn.classList.add('bg-yellow-700');
        container.appendChild(btn);
      }
      if (currentPage < totalPages) container.appendChild(createBtn('‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ¬ª', currentPage + 1));
    }

    function filterTable() {
      const input = document.getElementById('searchInput').value.toLowerCase();
      const rows = document.querySelectorAll('#dataTable tr');
      rows.forEach(row => {
        const match = row.innerText.toLowerCase().includes(input);
        row.style.display = match ? '' : 'none';
      });

      const pagination = document.getElementById('paginationControls');
      pagination.style.display = input ? 'none' : 'flex';
    }

    window.addEventListener('DOMContentLoaded', paginateTable);
  </script>

  <!-- ‚úÖ SweetAlert ‡∏•‡∏ö -->
  <script>
  document.querySelectorAll('.btn-delete').forEach(btn => {
    btn.addEventListener('click', async () => {
      const index = btn.dataset.index;
      const docNo = btn.dataset.docno;

      const { value: password, isConfirmed } = await Swal.fire({
        title: `‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (${docNo})`,
        input: 'password',
        inputLabel: '‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö',
        inputPlaceholder: '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô',
        inputAttributes: {
          maxlength: 32,
          autocapitalize: 'off',
          autocorrect: 'off'
        },
        showCancelButton: true,
        confirmButtonText: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡∏ö',
        cancelButtonText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'
      });

      if (!isConfirmed) return;

      if (password === '1234') {
        fetch(`/order/delete/${index}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ confirmPassword: password })
        }).then(res => {
          if (res.ok) {
            Swal.fire({
              icon: 'success',
              title: '‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!',
              text: `‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ${docNo} ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß`,
              timer: 2000,
              showConfirmButton: false
            }).then(() => location.reload());
          } else {
            Swal.fire({
              icon: 'error',
              title: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
              text: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ'
            });
          }
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: '‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á',
          text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
        });
      }
    });
  });
</script>
</body>
</html>
